local leet_arg = "leetcode.nvim"
return {
  {
    "kawre/leetcode.nvim",
    lazy = leet_arg ~= vim.fn.argv()[1],
    opts = {
      arg = leet_arg,
      -- lang = "cpp",
      lang = "python3",
      injector = { ---@type table<lc.lang, lc.inject>
        ["cpp"] = {
          before = {
            "#ifndef _GLIBCXX_NO_ASSERT",
            "#include <cassert>",
            "#endif",
            "#include <cctype>",
            "#include <cerrno>",
            "#include <cfloat>",
            "#include <ciso646>",
            "#include <climits>",
            "#include <clocale>",
            "#include <cmath>",
            "#include <csetjmp>",
            "#include <csignal>",
            "#include <cstdarg>",
            "#include <cstddef>",
            "#include <cstdio>",
            "#include <cstdlib>",
            "#include <cstring>",
            "#include <ctime>",
            "#if __cplusplus >= 201103L",
            "#include <ccomplex>",
            "#include <cfenv>",
            "#include <cinttypes>",
            "#include <cstdbool>",
            "#include <cstdint>",
            "#include <ctgmath>",
            "#include <cwchar>",
            "#include <cwctype>",
            "#endif",
            "#include <algorithm>",
            "#include <bitset>",
            "#include <complex>",
            "#include <deque>",
            "#include <exception>",
            "#include <fstream>",
            "#include <functional>",
            "#include <iomanip>",
            "#include <ios>",
            "#include <iosfwd>",
            "#include <iostream>",
            "#include <istream>",
            "#include <iterator>",
            "#include <limits>",
            "#include <list>",
            "#include <locale>",
            "#include <map>",
            "#include <memory>",
            "#include <new>",
            "#include <numeric>",
            "#include <ostream>",
            "#include <queue>",
            "#include <set>",
            "#include <sstream>",
            "#include <stack>",
            "#include <stdexcept>",
            "#include <streambuf>",
            "#include <string>",
            "#include <typeinfo>",
            "#include <utility>",
            "#include <valarray>",
            "#include <vector>",
            "#if __cplusplus >= 201103L",
            "#include <array>",
            "#include <atomic>",
            "#include <chrono>",
            "#include <condition_variable>",
            "#include <forward_list>",
            "#include <future>",
            "#include <initializer_list>",
            "#include <mutex>",
            "#include <random>",
            "#include <ratio>",
            "#include <regex>",
            "#include <scoped_allocator>",
            "#include <system_error>",
            "#include <thread>",
            "#include <tuple>",
            "#include <typeindex>",
            "#include <type_traits>",
            "#include <unordered_map>",
            "#include <unordered_set>",
            "#endif",
            "using namespace std;",
          },
          after = "int main() {}",
        },
        ["java"] = {
          before = "import java.util.*;",
        },
      },
    },
    build = ":TSUpdate html",
    dependencies = {
      "nvim-telescope/telescope.nvim",
      "nvim-lua/plenary.nvim", -- required by telescope
      "MunifTanjim/nui.nvim",

      -- optional
      "nvim-treesitter/nvim-treesitter",
      "rcarriga/nvim-notify",
      "nvim-tree/nvim-web-devicons",
    },
    keys = {
      { "<leader>lq", mode = { "n" }, "<cmd>Leet tabs<cr>" },
      { "<leader>lm", mode = { "n" }, "<cmd>Leet menu<cr>" },
      { "<leader>lc", mode = { "n" }, "<cmd>Leet console<cr>" },
      { "<leader>li", mode = { "n" }, "<cmd>Leet info<cr>" },
      { "<leader>ll", mode = { "n" }, "<cmd>Leet lang<cr>" },
      { "<leader>ld", mode = { "n" }, "<cmd>Leet desc<cr>" },
      { "<leader>lr", mode = { "n" }, "<cmd>Leet run<cr>" },
      { "<leader>ls", mode = { "n" }, "<cmd>Leet submit<cr>" },
      { "<leader>ly", mode = { "n" }, "<cmd>Leet yank<cr>" },
      { "<leader>lp", mode = { "n" }, "<cmd>Leet list<cr>" },
    },
  },
}
